/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/characters/pigeon.gltf -o src/components/Pigeon.tsx -t 
*/

import { useEffect, useRef } from 'react'
import { useAnimations, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { AnimationClip, SkinnedMesh, Bone, MeshStandardMaterial, Group } from 'three'

type ActionName =
  | 'Death'
  | 'Fast_Flying'
  | 'Flying_Idle'
  | 'Headbutt'
  | 'HitReact'
  | 'No'
  | 'Punch'
  | 'Yes'

interface GLTFActions extends AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Cube000: SkinnedMesh
    Cube000_1: SkinnedMesh
    Cube000_2: SkinnedMesh
    Cube000_3: SkinnedMesh
    Root: Bone
  }
  materials: {
    Pigeon_Main: MeshStandardMaterial
    Pigeon_Secondary: MeshStandardMaterial
    Eye_White: MeshStandardMaterial
    Eye_Black: MeshStandardMaterial
  }
  animations: GLTFActions[]
}

export function Pigeon(props: JSX.IntrinsicElements['group']) {
  const group = useRef<Group>(null!)
  const { nodes, materials, animations } = useGLTF('characters/pigeon.gltf') as GLTFResult
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    const resetAction = actions.Flying_Idle!.reset()
    const fadeInAction = resetAction.fadeIn(0.5)
    fadeInAction.play()

    return () => {
      const fadeOutAction = actions.Flying_Idle!.fadeOut(0.5)
      fadeOutAction.stop()
    }
  }, [actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name='Scene'>
        <group name='CharacterArmature'>
          <primitive object={nodes.Root} />
          <group name='Pigeon'>
            <skinnedMesh
              name='Cube000'
              geometry={nodes.Cube000.geometry}
              material={materials.Pigeon_Main}
              skeleton={nodes.Cube000.skeleton}
            />
            <skinnedMesh
              name='Cube000_1'
              geometry={nodes.Cube000_1.geometry}
              material={materials.Pigeon_Secondary}
              skeleton={nodes.Cube000_1.skeleton}
            />
            <skinnedMesh
              name='Cube000_2'
              geometry={nodes.Cube000_2.geometry}
              material={materials.Eye_White}
              skeleton={nodes.Cube000_2.skeleton}
            />
            <skinnedMesh
              name='Cube000_3'
              geometry={nodes.Cube000_3.geometry}
              material={materials.Eye_Black}
              skeleton={nodes.Cube000_3.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('characters/pigeon.gltf')
